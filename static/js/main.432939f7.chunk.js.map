{"version":3,"sources":["Api/axios.js","Components/MovieModal/MovieModal.jsx","Components/Row/Row.jsx","Api/request.js","Components/Banner/Banner.jsx","Components/Navbar/Nav.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["instance","axios","create","baseURL","MovieModal","backdrop_path","title","overview","name","release_date","first_air_date","vote_average","setModalVisibility","useState","trailerUrl","setTrailerUrl","useEffect","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","get","catch","error","console","log","className","role","onClick","videoId","opts","height","width","playerVars","autoplay","src","Math","floor","random","Row","fetchUrl","isLargeRow","id","movies","setMovies","modalVisibility","movieSelected","setMovieSelection","a","request","data","results","fetchData","document","getElementById","scrollLeft","window","innerWidth","map","movie","handleClick","poster_path","loading","alt","API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","length","style","backgroundImage","backgroundPosition","backgroundSize","original_name","fontSize","paddingRight","marginRight","substr","Nav","show","handleShow","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.432939f7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n//THIS IS THE BASE OF THE URL\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useEffect, useState } from 'react';\r\nimport './MovieModal.scss';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\n\r\nconst MovieModal = ({\r\n  backdrop_path,\r\n  title,\r\n  overview,\r\n  name,\r\n  release_date,\r\n  first_air_date,\r\n  vote_average,\r\n  setModalVisibility,\r\n}) => {\r\n  const base_url = 'https://image.tmdb.org/t/p/original/';\r\n  const [trailerUrl, setTrailerUrl] = useState('');\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const randomPorcentaje = () => {\r\n    return Math.floor(Math.random() * 100);\r\n  };\r\n  useEffect(() => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(title || name || '')\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"presentation\" role=\"presentation\">\r\n      <div className=\"wrapper-modal\">\r\n        <div className=\"modal\">\r\n          <span\r\n            onClick={() => setModalVisibility(false)}\r\n            className=\"modal-close\">\r\n            <CancelIcon />\r\n          </span>\r\n          {trailerUrl ? (\r\n            <Youtube videoId={trailerUrl} opts={opts} />\r\n          ) : (\r\n            <img\r\n              className=\"modal__poster-img\"\r\n              src={`${base_url}${backdrop_path}`}\r\n            />\r\n          )}\r\n\r\n          <div className=\"modal__content\">\r\n            <p className=\"modal__details\">\r\n              <span className=\"modal__user-perc\">\r\n                {randomPorcentaje()}% for you\r\n              </span>{' '}\r\n              {release_date ? release_date : first_air_date}\r\n            </p>\r\n            <h2 className=\"modal__title\">{title ? title : name}</h2>\r\n            <p className=\"modal__overview\">{overview}</p>\r\n            <p className=\"modal__overview\">Vote Average: {vote_average}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieModal;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from '../../Api/axios';\r\nimport './Row.scss';\r\nimport MovieModal from '../MovieModal/MovieModal';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst Row = ({ title, fetchUrl, isLargeRow, id }) => {\r\n  const base_url = 'https://image.tmdb.org/t/p/original/';\r\n  const [movies, setMovies] = useState([]);\r\n  const [modalVisibility, setModalVisibility] = useState(false);\r\n  const [movieSelected, setMovieSelection] = useState({});\r\n\r\n  //A snippet of code which runs based on a specific condition/variable\r\n  useEffect(() => {\r\n    //if [], run once when the row loads, and dont run again\r\n\r\n    async function fetchData() {\r\n      //Dont move until we get the API answer\r\n      const request = await axios.get(fetchUrl);\r\n      // GET REQUEST  = \"https://api.themoviedb.org/3/fetchUrl\"\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const handleClick = (movie) => {\r\n    setModalVisibility(true);\r\n    setMovieSelection(movie);\r\n  };\r\n  return (\r\n    <section className=\"row\">\r\n      {/** TITLE */}\r\n      <h2>{title}</h2>\r\n      <div className=\"slider\">\r\n        <div className=\"slider__arrow-left\">\r\n          <span\r\n            className=\"arrow\"\r\n            onClick={() => {\r\n              document.getElementById(id).scrollLeft -= window.innerWidth - 80;\r\n            }}>\r\n            <ArrowBackIosIcon />\r\n          </span>\r\n        </div>\r\n        <div id={id} className=\"row__posters\">\r\n          {/**SEVERAL ROW__POSTER */}\r\n          {movies.map((movie) => (\r\n            <img\r\n              key={movie.id}\r\n              onClick={() => handleClick(movie)}\r\n              className={`row__poster ${isLargeRow && 'row__posterLarge'}`}\r\n              src={`${base_url}${\r\n                isLargeRow ? movie.poster_path : movie.backdrop_path\r\n              }`}\r\n              loading=\"lazy\"\r\n              alt={movie.name}\r\n            />\r\n          ))}\r\n        </div>\r\n        <div className=\"slider__arrow-right\">\r\n          <span\r\n            className=\"arrow\"\r\n            onClick={() => {\r\n              document.getElementById(id).scrollLeft += window.innerWidth - 80;\r\n            }}>\r\n            <ArrowForwardIosIcon />\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {modalVisibility && (\r\n        <MovieModal\r\n          {...movieSelected}\r\n          setModalVisibility={setModalVisibility}\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Row;\r\n","const API_KEY = '1ff422b23645aca766dd0159328729b0';\r\n\r\nconst requests = {\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport axios from '../../Api/axios';\r\nimport requests from '../../Api/request';\r\nimport './Banner.scss';\r\n\r\nconst Banner = () => {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 1) + '...' : str;\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      //Give to our movie hook one of all the movies randomly\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ],\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundImage: `url(\r\n                    \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n                    )`,\r\n        backgroundPosition: 'top center',\r\n        backgroundSize: 'cover',\r\n      }}>\r\n      <div className=\"banner__contents\">\r\n        {/**Tittle */}\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button play\">\r\n            <PlayArrowIcon />\r\n            Play\r\n          </button>\r\n          <button className=\"banner__button info\">\r\n            <InfoOutlinedIcon\r\n              fontSize=\"small\"\r\n              paddingRight={20}\r\n              marginRight={100}\r\n            />\r\n            <div className=\"space\"></div> More Information\r\n          </button>\r\n        </div>\r\n        {/**DIV > 2 BUTTONS */}\r\n\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n        {/*Description*/}\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Nav.scss';\r\n\r\nconst Nav = () => {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 50) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      }\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll', () => {});\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <nav className={`nav ${show && 'nav__black'}`}>\r\n      <img\r\n        alt=\"Netflix logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/170px-Netflix_2015_logo.svg.png\"\r\n        className=\"nav__logo\"\r\n      />\r\n      <img\r\n        alt=\"User logged\"\r\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\r\n        className=\"nav__avatar\"\r\n      />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from 'react';\r\nimport Row from './Components/Row/Row';\r\nimport Banner from './Components/Banner/Banner';\r\nimport Nav from './Components/Navbar/Nav';\r\nimport requests from './Api/request';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"app\">\r\n      {/**NAV */}\r\n      <Nav />\r\n      {/*BANNER*/}\r\n      <Banner />\r\n\r\n      <Row\r\n        title=\"NETFLIX ORIGINALS\"\r\n        id=\"NO\"\r\n        fetchUrl={requests.fetchNetflixOriginals}\r\n        isLargeRow\r\n      />\r\n\r\n      <Row title=\"Trending Now\" id=\"TN\" fetchUrl={requests.fetchTrending} />\r\n      <Row title=\"Top Rated\" id=\"TR\" fetchUrl={requests.fetchTopRated} />\r\n      <Row\r\n        title=\"Action Movies\"\r\n        id=\"AM\"\r\n        fetchUrl={requests.fetchActionMovies}\r\n      />\r\n      <Row\r\n        title=\"Comedy Movies\"\r\n        id=\"CM\"\r\n        fetchUrl={requests.fetchComedyMovies}\r\n      />\r\n      <Row\r\n        title=\"Horror Movies\"\r\n        id=\"HM\"\r\n        fetchUrl={requests.fetchHorrorMovies}\r\n      />\r\n      <Row\r\n        title=\"Romance  Movies\"\r\n        id=\"RM\"\r\n        fetchUrl={requests.fetchRomanceMovies}\r\n      />\r\n      <Row\r\n        title=\"Documentaries\"\r\n        id=\"DM\"\r\n        fetchUrl={requests.fetchDocumentaries}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}